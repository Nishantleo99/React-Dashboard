{"ast":null,"code":"import _classCallCheck from \"D:\\\\DashboardReactUpdated\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DashboardReactUpdated\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\DashboardReactUpdated\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\DashboardReactUpdated\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\DashboardReactUpdated\\\\client\\\\src\\\\views\\\\Dashboard\\\\LineChartComponent.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { element } from 'prop-types';\n\nvar LineChartComponent = /*#__PURE__*/function (_Component) {\n  _inherits(LineChartComponent, _Component);\n\n  var _super = _createSuper(LineChartComponent);\n\n  function LineChartComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LineChartComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Data: {}\n    };\n    return _this;\n  }\n\n  _createClass(LineChartComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api').then(function (res) {\n        var markScore = res.data;\n        var score = [];\n        markScore.forEach(function (element) {\n          score.push(element.jan);\n          score.push(element.feb);\n          score.push(element.mar);\n          score.push(element.apr);\n          score.push(element.may);\n          score.push(element.jun);\n          score.push(element.jul);\n          score.push(element.aug);\n          score.push(element.sept);\n          score.push(element.oct);\n          score.push(element.nov);\n          score.push(element.dec);\n        });\n\n        _this2.setState({\n          Data: {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            datasets: [{\n              label: '% Stock Sold',\n              backgroundColor: 'rgb(163, 107, 255)',\n              borderColor: 'rgba(0,0,0,1)',\n              borderWidth: 3,\n              data: score\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        width: 70,\n        height: 20,\n        options: {\n          responsive: true\n        },\n        data: this.state.Data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LineChartComponent;\n}(Component);\n\nexport { LineChartComponent as default };","map":{"version":3,"sources":["D:/DashboardReactUpdated/client/src/views/Dashboard/LineChartComponent.js"],"names":["React","Component","Line","axios","element","LineChartComponent","props","state","Data","get","then","res","markScore","data","score","forEach","push","jan","feb","mar","apr","may","jun","jul","aug","sept","oct","nov","dec","setState","labels","datasets","label","backgroundColor","borderColor","borderWidth","responsive"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;;IAEqBC,kB;;;;;AAEjB,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE;AADC,KAAX;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAChBL,MAAAA,KAAK,CAACM,GAAN,CAAU,MAAV,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACT,YAAMC,SAAS,GAAGD,GAAG,CAACE,IAAtB;AACA,YAAIC,KAAK,GAAG,EAAZ;AACAF,QAAAA,SAAS,CAACG,OAAV,CAAkB,UAAAX,OAAO,EAAI;AACzBU,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACa,GAAnB;AACAH,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACc,GAAnB;AACAJ,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACe,GAAnB;AACAL,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACgB,GAAnB;AACAN,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACiB,GAAnB;AACAP,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACkB,GAAnB;AACAR,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACmB,GAAnB;AACAT,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACoB,GAAnB;AACAV,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACqB,IAAnB;AACAX,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACsB,GAAnB;AACAZ,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACuB,GAAnB;AACAb,UAAAA,KAAK,CAACE,IAAN,CAAWZ,OAAO,CAACwB,GAAnB;AACH,SAbD;;AAeA,QAAA,MAAI,CAACC,QAAL,CAAc;AAEVrB,UAAAA,IAAI,EAAE;AACFsB,YAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EACjB,OADiB,EACR,KADQ,EACD,MADC,EACO,MADP,EACc,QADd,EACwB,WADxB,EACqC,SADrC,EACgD,UADhD,EAC4D,UAD5D,CADN;AAIXC,YAAAA,QAAQ,EAAE,CACT;AACEC,cAAAA,KAAK,EAAE,cADT;AAEEC,cAAAA,eAAe,EAAE,oBAFnB;AAGEC,cAAAA,WAAW,EAAE,eAHf;AAIEC,cAAAA,WAAW,EAAE,CAJf;AAKEtB,cAAAA,IAAI,EAAEC;AALR,aADS;AAJC;AAFI,SAAd;AAiBH,OApCD;AAqCH;;;6BAGD;AACI,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AACA,QAAA,KAAK,EAAE,EADP;AAEA,QAAA,MAAM,EAAE,EAFR;AAGA,QAAA,OAAO,EAAE;AACLsB,UAAAA,UAAU,EAAE;AADP,SAHT;AAMA,QAAA,IAAI,EAAI,KAAK7B,KAAL,CAAWC,IANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH;;;;EA9D2CP,S;;SAA3BI,kB","sourcesContent":["import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { element } from 'prop-types';\r\n\r\nexport default class LineChartComponent extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            Data: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api')\r\n        .then(res => {\r\n            const markScore = res.data;\r\n            let score = [];\r\n            markScore.forEach(element => {\r\n                score.push(element.jan);\r\n                score.push(element.feb);\r\n                score.push(element.mar);\r\n                score.push(element.apr);\r\n                score.push(element.may);\r\n                score.push(element.jun);\r\n                score.push(element.jul);\r\n                score.push(element.aug);\r\n                score.push(element.sept);\r\n                score.push(element.oct);\r\n                score.push(element.nov);\r\n                score.push(element.dec);\r\n            });\r\n\r\n            this.setState({\r\n\r\n                Data: {\r\n                    labels: ['January', 'February', 'March',\r\n           'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December'],\r\n\r\n           datasets: [\r\n            {\r\n              label: '% Stock Sold',\r\n              backgroundColor: 'rgb(163, 107, 255)',\r\n              borderColor: 'rgba(0,0,0,1)',\r\n              borderWidth: 3,\r\n              data: score\r\n            }\r\n          ]\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <Line\r\n                width={70}\r\n                height={20}\r\n                options={{\r\n                    responsive: true\r\n                }}\r\n                data = {this.state.Data}/>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}